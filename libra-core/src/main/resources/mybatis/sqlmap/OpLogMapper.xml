<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cd.blog.humbird.libra.mapper.OpLogMapper">

    <resultMap id="BaseResult" type="cd.blog.humbird.libra.model.po.OpLogPO">
        <id column="id" property="id"/>
        <result column="opType" property="opType"/>
        <result column="opUserId" property="opUserId"/>
        <result column="opUserIp" property="opUserIp"/>
        <result column="envId" property="envId"/>
        <result column="opTime" property="opTime"/>
        <result column="projectId" property="projectId"/>
        <result column="content" property="content"/>
        <result column="key1" property="key1"/>
        <result column="key2" property="key2"/>
        <result column="key3" property="key3"/>
        <result column="key4" property="key4"/>
        <result column="key5" property="key5"/>
        <result column="key6" property="key6"/>
    </resultMap>

    <sql id="getOpLogCondition">
        <where>
            <if test="criteria.opTypeStart != null">
                and o.opType >= #{criteria.opTypeStart}
            </if>
            <if test="criteria.opTypeEnd != null">
                <![CDATA[and o.opType<= #{criteria.opTypeEnd}]]>
            </if>
            <if test="criteria.projectId != null">
                and o.projectId = #{criteria.projectId}
            </if>
            <if test="criteria.envId != null">
                and o.envId = #{criteria.envId}
            </if>
            <if test="criteria.userId != null">
                and o.userId = #{criteria.userId}
            </if>
            <if test="criteria.from != null">
                and o.from >= #{criteria.from}
            </if>
            <if test="criteria.to != null">
                <![CDATA[and o.to <= #{criteria.to}]]>
            </if>
            <if test="criteria.content != null">
                and o.content LIKE CONCAT('%', #{criteria.content}, '%')
            </if>
        </where>
    </sql>

    <select id="findLogs" resultMap="BaseResult">
        SELECT o.id, o.opType, o.opUserId, o.opUserIp, o.envId, o.opTime, o.projectId, o.content,
        o.key1, o.key2, o.key3, o.key4, o.key5, o.key6
        FROM op_log o
        <include refid="getOpLogCondition"/>
        ORDER BY o.opTime DESC
    </select>

    <select id="findLogKey" resultType="java.lang.String">
        SELECT #{keyName}
        FROM op_log o
        WHERE o.id = #{id}
    </select>

    <insert id="insert" parameterType="cd.blog.humbird.libra.model.po.OpLogPO" useGeneratedKeys="true" keyColumn="id"
            keyProperty="id">
        INSERT INTO op_log (opType, opUserId, opUserIp, envId, opTime, projectId, content,
        key1, key2, key3, key4, key5, key6)
        VALUES (#{opType}, #{opUserId}, #{opUserIp}, #{envId}, #{opTime}, #{projectId}, #{content},
        #{key1}, #{key2}, #{key3}, #{key4}, #{key5}, #{key6})
    </insert>

</mapper>